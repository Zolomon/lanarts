--- 

# Default endpoint for tunnels: Any nonsolid neighbouring subarea
# Default start point for tunnels: Any perimeter nonsolid from this area
# Can define tunnels from point A to point B anywhere
# Areas can optionally be controlled by a script

#Overworld
#  Town 1 -> solid perimeter
#    Shop 1
#  Town 2
#  Forest
#  Dungeon
#    Rooms 1
#    Rooms 2

# missing components: spawn with hollow interior / solid outline or not
#                     spawn on hollow / spawn on solid
#                     spawn shape
#  Takes place at the 'room' level, a defaulted area acts like a 'room
# Area: 
#  name: #Global to area
#  size:
#    
# Each sub area determines its own content -> Are names needed ?
# group: might be a better idea than name -> allow ad hoc groupings
# makes more sense for areas spawned multiple times

# Hypothesis: Nested structures need to be handled conveniently, they will be 'mostly flat'
# do whatever possible to treat them as a flat structure

# How to signify 10 dungeons of various configurations ?
#   Use variants, which is mutually exclusive with type/size/content
# How to signify an area with 10% of rooms covered in doors ?
#   In features -> doors: {chance_around_room: guaranteed: guaranteed_around_room:}
#   Certain features should be 'overriden' by most-nested container
# How to signify a certain entrance orientation (?)
# Parent content specifiers are necessary for ad-hoc groupings
#   Powerful construct
# How to make multiple entrances lead to the same dungeon instance ?
#     type: this <- each dungeon instance is either tied to a type or a specific area ID
#     default is one global branch instance, otherwise use unique_to: Dungeon etc
#     That calls into question, how coarse grained are types ?
#     Luckily we can specify the content generation in the surrounding context, and have it generate in 
#     a sub area, removing most of the need for type heirarchies 
#     Spawning for $TYPE will only spawn within the given location
# How to make an entrance lead to a temporary location ?
# How to make multiple entrances lead to _different_ dungeon instances ?
#     How to instance a dungeon with a certain layout, but different monsters ?
#     ^^ Eventually have standard monster sets for each difficulty, dungeons just pick themes
#     Current functionality can be used to pick and choose specific monsters -> However, need difficulty thresholds

dungeon_layouts: &dungeon_layouts
  - type: Dungeon
    size: [40, 40]
    tunnels: 
      - amount: 2
        end_type: Overworld     
  - type: Dungeon
    size: [40, 40]
    tunnels: 
      - amount: 2
        end_type: Overworld

branches:
  - name: Main World
    levels:
    - type: Overworld
      subareas:
        - amount: 5
          variants: *dungeon_layouts
        - type: Town
          amount: 
          size: [128, 128]
      content:
        - type: Dungeon
          items: *dungeon_layouts
          enemies: *dungeon_layouts
          features: *dungeon_layouts