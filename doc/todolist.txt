Large:
- Versatile save format that allows for resuming a networked game even through major game updates
- Make spells not hardcoded
- Add allied monsters that stay close to their 'owner' and shoot at nearby enemies
	Details:
	-May need two pathfinds per monster
	-More if we support double-sized enemies
	-Performance hit reasonable
- Improve room generation with more patterns & room connectivity tests
- Add doors and other dungeon features such as keys etc

Medium:
- Specify a draw order (or draw & execution order) for objects based on a depth parameter & object id
	- Binary tree ? Binary tree with ~ 100 elements not tooo bad.
	- Difficulty to imagine better ordering structure 
	- Can keep binary tree of inst state pointers for efficiency 
		-> optimize for depth bins & not many objects with different depths, adds nearly no overhead
		-> Keep another doubly linked list in the internal structure that points to next highest ID object of same depth
- Make game based on Strength/Defence/Agility and Magic/Resistance
	- add attack rate to base stats -> agility
- Add higher level sprite class that handles animation & orientation & multiple tile variations
- Add in-game chat support for multiplayer
- Support for double-sized enemies (2x2 tile size max)
- Add start up screen with networking options
- Special case pushing for tight corridors ?
- Straight line AOE spell
- Lightning Spell that takes up multiple squares
- Add levels of minimap viewing
- Add float coordinate buffering (or make ->x and ->y floats) for all GameInst objects

- Add keyboard based blink that moves to furthest point
- More complete & functional sidebar interface, with tabs
- Add stat defence multipliers to enemy attacks, maybe create attack types


Small:
- Add item use preconditions so items are not wasted when they cannot be used
- Have a flexible portal system that indicates which level to connect to
- Add cooldowns to item use

Partial Completion:
- [DONE WITH BUGS/LACKS SOPHISTICATION] Networked play over LAN with action-based synchronization
- [STARTED] Classes for players

- [ALMOST DONE] Support for multiple PlayerInst (Maybe re-use PlayerInst for summoned monsters ?)
- [IFFY] Unification of code-path's for PlayerInst/EnemyInst ?
- [DONE - IMPROVE VISIBILITY] More visual output on the minimap [Stairs etc]
- [DONE - VERY RARE INSTANCES LEFT] Fix monsters getting stuck due to random movement 
- [DONE - CURRENTLY HARDCODED] Action bar, below screen 

Completed:
BEFORE 18/04/2012:
- [DONE] Refactor room generation with tiered room, tunnel, feature, item generation.
- [DONE] Move out of combat
- [DONE] Melee attack animation 
- [DONE] versatile markup format that allows for human edit-able game objects (YAML?)


AFTER 18/04/2012:
- [DONE] Refactor away all enum's for resources so order no longer matters
- [DONE] Actions for players & action replay
- [DONE] Weapons spawn on ground
- [DONE] Weapons are usable, with graphical validation (unhardcode them)
- [MOSTLY DONE] Enemies fan out & walk away from player

23/04/2012:
- [DONE WITH BUGS/LACKS SOPHISTICATION] Networked play over LAN with action-based synchronization
- [DONE]Fix random appearance of offscreen tiles -> GameTiles may be the culprit
- [DONE] Fix items on border of view not being visible -> subtract away from player and check visibility??
- [DONE] Put tile-set information in the YAML files for level generation
- [DONE] Add dropping of objects & dont always autopickup

30/04/2012:
- [DONE] Add LUA integration for specification of actions, make sure all data remains in YAML files


03/05/2012:
- [DONE] Broadcast RNG seed & class information
- [DONE] Add a resting animation
- [DONE] Fix melee attacks -> add to action bar and make them not based on running into enemies, instead holding j/mouse
